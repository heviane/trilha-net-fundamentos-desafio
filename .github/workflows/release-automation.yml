# .github/workflows/release-automation.yml

name: Create Release

on:
  push:
    tags:
      - 'v*.*.*' # Dispara o workflow quando uma tag como v1.0.0 Ã© enviada

jobs:
  build:
    name: Build ${{ matrix.project }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [Parking, Booking, SmartPhone, HelloWorld]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build and Publish
        run: |
          PROJECT_NAME=${{ matrix.project }}
          PROJECT_PATH="./src/console/Apps/$PROJECT_NAME/$PROJECT_NAME.csproj"
          
          dotnet publish $PROJECT_PATH -c Release -r linux-x64 --self-contained true -o ./dist/$PROJECT_NAME-linux-x64
          dotnet publish $PROJECT_PATH -c Release -r win-x64 --self-contained true -o ./dist/$PROJECT_NAME-win-x64
          dotnet publish $PROJECT_PATH -c Release -r osx-x64 --self-contained true -o ./dist/$PROJECT_NAME-osx-x64

      - name: Package Artifacts
        run: |
          PROJECT_NAME=${{ matrix.project }}
          (cd dist/$PROJECT_NAME-linux-x64 && zip -r ../../$PROJECT_NAME-linux-x64.zip .)
          (cd dist/$PROJECT_NAME-win-x64   && zip -r ../../$PROJECT_NAME-win-x64.zip .)
          (cd dist/$PROJECT_NAME-osx-x64   && zip -r ../../$PROJECT_NAME-osx-x64.zip .)

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project }}-build
          path: |
            ${{ matrix.project }}-linux-x64.zip
            ${{ matrix.project }}-win-x64.zip
            ${{ matrix.project }}-osx-x64.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get Release Notes from CHANGELOG
        id: get_release_notes
        run: |
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/v//')
          NOTES=$(awk -v ver="\[$VERSION\]" '/^## / { if (p) exit; if ($2 == ver) p=1; next } p' CHANGELOG.md)
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ steps.get_release_notes.outputs.notes }}
          prerelease: false
          files: artifacts/*/*.zip
